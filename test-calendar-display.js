// Script de test pour v√©rifier l'affichage des r√©servations dans le calendrier
const API_BASE_URL = 'https://ladla.onrender.com';

// Fonction pour tester l'API des r√©servations
async function testReservationsAPI() {
  try {
    console.log('üîç Test de l\'API des r√©servations...');
    
    // Test 1: R√©cup√©rer toutes les r√©servations
    console.log('\nüìã Test 1: Toutes les r√©servations');
    const allReservationsResponse = await fetch(`${API_BASE_URL}/api/reservations`);
    const allReservations = await allReservationsResponse.json();
    console.log('R√©ponse API (toutes):', allReservations);
    
    if (allReservations.success && allReservations.data.length > 0) {
      console.log(`‚úÖ ${allReservations.data.length} r√©servations trouv√©es`);
      console.log('Premi√®re r√©servation:', allReservations.data[0]);
    } else {
      console.log('‚ùå Aucune r√©servation trouv√©e');
      return;
    }
    
    // Test 2: R√©cup√©rer les r√©servations de la semaine courante
    console.log('\nüìÖ Test 2: R√©servations de la semaine courante');
    const today = new Date().toISOString().split('T')[0];
    const weekResponse = await fetch(`${API_BASE_URL}/api/reservations/semaine/${today}`);
    const weekReservations = await weekResponse.json();
    console.log('R√©ponse API (semaine):', weekReservations);
    
    if (weekReservations.success) {
      console.log(`‚úÖ ${weekReservations.data.length} r√©servations cette semaine`);
      console.log('P√©riode:', weekReservations.semaine);
      
      // Analyser les types de voitures
      const vehicleTypes = {};
      weekReservations.data.forEach(res => {
        vehicleTypes[res.type_voiture] = (vehicleTypes[res.type_voiture] || 0) + 1;
      });
      
      console.log('\nüöó R√©partition par type de v√©hicule:');
      Object.entries(vehicleTypes).forEach(([type, count]) => {
        console.log(`  - ${type}: ${count} r√©servation(s)`);
      });
      
      // Test de formatage des dates comme dans le calendrier
      console.log('\nüìä Test formatage dates pour calendrier:');
      weekReservations.data.forEach(reservation => {
        const dateString = reservation.date_rdv.split('T')[0];
        const formattedDate = dateString;
        const time = reservation.heure_rdv.substring(0, 5);
        
        console.log(`  - ${reservation.prenom} ${reservation.nom}: ${formattedDate} √† ${time} (${reservation.type_voiture})`);
      });
      
    } else {
      console.log('‚ùå Erreur r√©cup√©ration semaine:', weekReservations.error);
    }
    
    // Test 3: Cr√©er une r√©servation de test
    console.log('\nüß™ Test 3: Cr√©ation d\'une r√©servation de test');
    const testReservation = {
      prenom: 'Test',
      nom: 'Calendar',
      email: 'test@example.com',
      telephone: '0123456789',
      adresse: '123 Rue de Test, 06000 Nice',
      typeVoiture: 'citadine',
      marqueVoiture: 'Renault',
      formule: 'Lavage Complet',
      prix: 25,
      date: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString().split('T')[0], // Demain
      heure: '14:00',
      commentaires: 'R√©servation de test pour v√©rifier l\'affichage calendrier',
      newsletter: false
    };
    
    const createResponse = await fetch(`${API_BASE_URL}/api/reservations`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(testReservation)
    });
    
    const createResult = await createResponse.json();
    console.log('R√©sultat cr√©ation:', createResult);
    
    if (createResult.success) {
      console.log('‚úÖ R√©servation de test cr√©√©e avec succ√®s');
      console.log('ID:', createResult.data.id);
      
      // Attendre un peu puis v√©rifier si elle appara√Æt
      setTimeout(async () => {
        console.log('\nüîÑ V√©rification apr√®s cr√©ation...');
        const verifyResponse = await fetch(`${API_BASE_URL}/api/reservations/semaine/${today}`);
        const verifyResult = await verifyResponse.json();
        
        if (verifyResult.success) {
          const testRes = verifyResult.data.find(r => r.id === createResult.data.id);
          if (testRes) {
            console.log('‚úÖ R√©servation de test trouv√©e dans la semaine');
            console.log('D√©tails:', testRes);
          } else {
            console.log('‚ùå R√©servation de test non trouv√©e dans la semaine');
          }
        }
      }, 2000);
      
    } else {
      console.log('‚ùå Erreur cr√©ation r√©servation:', createResult.error);
    }
    
  } catch (error) {
    console.error('‚ùå Erreur lors du test:', error);
  }
}

// Lancer le test
testReservationsAPI(); 